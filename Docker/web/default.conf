server {
    listen 80;
    # It's good practice to define a server_name.
    # Use your actual domain or '_' for a default server.
    server_name your-domain.com;

    # Define standard log files.
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    #================================================#
    # Section 1: PHP API Backend Configuration       #
    #================================================#

    # This 'location' block specifically targets any request that starts with /api.
    # This prefix acts as the gateway to your entire PHP backend.
    location /api {
        # This is the front-controller pattern for your API.
        # It first tries to find a static file that might match the request URI
        # within the PHP application's public directory (e.g., /api/images/logo.png).
        # If no file is found, it internally rewrites the request to be handled
        # by your API's main entry point, which we'll define as /api/index.php.
        try_files $uri /api/index.php$is_args$args;
    }

    # This location block catches the rewritten request from the block above
    # and handles the actual execution of the PHP script.
    location ~ ^/api/index\.php(/|$) {
        # IMPORTANT: You must include the fastcgi_params file.
        include fastcgi_params;

        # This is the address of your PHP-FPM service.
        # 'php:9000' is common in Docker setups where 'php' is the service name.
        fastcgi_pass php:9000;

        # Sets the script that will be executed if a directory is requested.
        fastcgi_index index.php;

        # This is the most critical change from your original configuration.
        # We are manually setting the full path to the script that PHP-FPM must execute.
        # Even though the request URI is '/api/index.php', the actual file on disk
        # is at '/app/backend/public/index.php'. This line corrects the path.
        fastcgi_param SCRIPT_FILENAME /app/backend/public/index.php;

        # The REQUEST_URI variable (set by fastcgi_params) will correctly contain
        # the full path, like '/api/users/1', which your PHP framework's router
        # will use to direct the request internally.
    }

    #================================================#
    # Section 2: Vue.js Frontend Configuration       #
    #================================================#

    # This 'location /' block is the default handler for all incoming requests.
    location / {
        # Set the root directory to your Vue.js application's build output.
        # This is typically the 'dist' folder created by 'npm run build'.
        root /app/frontend/dist;

        # Specify the default file to serve. For an SPA, this is always index.html.
        index index.html;

        # This is the most important directive for an SPA.
        # Nginx will first try to find a file that matches the exact request URI ($uri).
        # If not found, it will try to find a directory ($uri/).
        # If that also fails, it will serve /index.html as a fallback.
        # This allows Vue Router to take control of the routing on the client side
        # for any non-static-asset paths (e.g., /about, /users/1).
        try_files $uri $uri/ /index.html;
    }
}